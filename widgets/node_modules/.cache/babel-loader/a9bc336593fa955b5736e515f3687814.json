{"ast":null,"code":"var _jsxFileName = \"/Users/marjanlukavyi/Desktop/react/widgets/src/components.js/Dropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dropdown = ({\n  options,\n  selected,\n  onSelectedChange\n}) => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    document.body.addEventListener('click', () => {\n      console.log('click');\n    });\n  }, []);\n  const renderedOptions = options.map(option => {\n    if (option.value === selected.value) {//   return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => onSelectedChange(option),\n      children: option.label\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select a Color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: selected.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setOpen(!open),\n        className: `${open ? 'visible active' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: renderedOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dropdown, \"e27cRtNMdAs0U0o1oHlS6A8OEBo=\");\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["/Users/marjanlukavyi/Desktop/react/widgets/src/components.js/Dropdown.js"],"names":["React","useEffect","useState","Dropdown","options","selected","onSelectedChange","open","setOpen","document","body","addEventListener","console","log","renderedOptions","map","option","value","label"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,CAAD,KAA6C;AAAA;;AAC5D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,OAA/B,EAAwC,MAAM;AAC5CC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAMC,eAAe,GAAGV,OAAO,CAACW,GAAR,CAAaC,MAAD,IAAY;AAC9C,QAAIA,MAAM,CAACC,KAAP,KAAiBZ,QAAQ,CAACY,KAA9B,EAAqC,CACnC;AACD;;AAED,wBACE;AAAwB,MAAA,OAAO,EAAE,MAAMX,gBAAgB,CAACU,MAAD,CAAvD;AAAA,gBACGA,MAAM,CAACE;AADV,OAAUF,MAAM,CAACC,KAAjB;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAVuB,CAAxB;AAYA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAA,kBAAMZ,QAAQ,CAACa;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,OAAO,EAAE,MAAMV,OAAO,CAAC,CAACD,IAAF,CADxB;AAEE,QAAA,SAAS,EAAG,GAAEA,IAAI,GAAG,gBAAH,GAAsB,EAAG,EAF7C;AAAA,+BAIE;AAAA,oBAAMO;AAAN;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAlCD;;GAAMX,Q;;KAAAA,Q;AAoCN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst Dropdown = ({ options, selected, onSelectedChange }) => {\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    document.body.addEventListener('click', () => {\n      console.log('click');\n    });\n  }, []);\n\n  const renderedOptions = options.map((option) => {\n    if (option.value === selected.value) {\n      //   return null;\n    }\n\n    return (\n      <div key={option.value} onClick={() => onSelectedChange(option)}>\n        {option.label}\n      </div>\n    );\n  });\n\n  return (\n    <div>\n      <label>Select a Color</label>\n      <div>\n        <div>{selected.label}</div>\n        <div\n          onClick={() => setOpen(!open)}\n          className={`${open ? 'visible active' : ''}`}\n        >\n          <div>{renderedOptions}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dropdown;\n"]},"metadata":{},"sourceType":"module"}